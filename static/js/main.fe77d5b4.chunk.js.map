{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","utils/sortPeople.tsx","pages/PeoplePage.tsx","utils/filterPeople.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["Navbar","isActiveClass","isActive","cn","className","role","to","App","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","Loader","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","centuries","PeopleFilters","setSearchParams","query","get","getAll","sex","renderSexFilter","label","classNames","type","placeholder","onChange","event","target","map","century","includes","filter","paramsCentury","length","PersonLink","person","slug","name","PeopleTable","people","selectedSlug","useParams","currentSort","useMemo","sortBy","order","getParent","find","undefined","sort","sortLower","toLowerCase","mother","motherName","father","fatherName","href","born","died","SortBy","PARAM_KEYS","PeoplePage","useState","isLoading","setIsLoading","setPeople","error","setError","filters","setFilters","sorts","setSorts","useEffect","initialLoad","humans","human","filteredPeople","peopleCopy","direction","Died","person1","person2","Born","Sex","localeCompare","Name","sortPeople","normalizeQuery","trim","Math","ceil","filterPeople","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.fe77d5b4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar: React.FC = () => {\n  const isActiveClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={isActiveClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={isActiveClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\nconst centuries = [16, 17, 18, 19, 20];\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = {\n    query: searchParams.get('query') || '',\n    centuries: searchParams.getAll('century'),\n    sex: searchParams.get('sex'),\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchParams(getSearchWith(searchParams, { query: value || null }));\n  };\n\n  const renderSexFilter = (sex: string | null, label: string) => (\n    <SearchLink\n      className={classNames({ 'is-active': params.sex === sex })}\n      params={{ sex }}\n    >\n      {label}\n    </SearchLink>\n  );\n\n  const renderCenturyFilter = (century: number) => (\n    <SearchLink\n      key={century}\n      className={classNames('button mr-1', {\n        'is-info': params.centuries.includes(century.toString()),\n      })}\n      params={{\n        century: params.centuries.includes(century.toString())\n          ? params.centuries.filter((paramsCentury) => century.toString()\n          !== paramsCentury)\n          : [...params.centuries, century.toString()],\n      }}\n    >\n      {century}\n    </SearchLink>\n  );\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {renderSexFilter(null, 'All')}\n        {renderSexFilter('m', 'Male')}\n        {renderSexFilter('f', 'Female')}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={params.query}\n            onChange={handleQueryChange}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">{centuries.map(renderCenturyFilter)}</div>\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': params.centuries.length !== 0,\n              })}\n              params={{ century: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ century: null, sex: null, query: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../types';\n\ntype Props = {\n  person?: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={`${person?.slug}?${searchParams.toString()}`}\n      className={cn({\n        'has-text-danger': person?.sex === 'f',\n      })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[];\n};\n\ntype Sort = {\n  sortBy: string | null;\n  order: string | null;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { selectedSlug } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const currentSort: Sort = useMemo(() => {\n    return {\n      sortBy: searchParams.get('sort'),\n      order: searchParams.get('order'),\n    };\n  }, [searchParams]);\n\n  const getParent = (name: string | null): Person | undefined => {\n    return name ? people.find(person => person.name === name) : undefined;\n  };\n\n  const sorts = ['Name', 'Sex', 'Born', 'Died'];\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {sorts.map(sort => {\n            const sortLower = sort.toLowerCase();\n\n            return (\n              <th key={sortLower}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {sort}\n                  <SearchLink\n                    params={{\n                      sort: sortLower === currentSort.sortBy\n                      && currentSort.order === 'desc' ? null : sortLower,\n                      order: sortLower === currentSort.sortBy\n                      && currentSort.order !== 'desc' ? 'desc' : null,\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn(\n                          'fas',\n                          {\n                            'fa-sort': currentSort.sortBy !== sortLower,\n                            'fa-sort-up': currentSort.sortBy === sortLower\n                            && !currentSort.order,\n                            'fa-sort-down': currentSort.sortBy === sortLower\n                            && currentSort.order,\n                          },\n                        )}\n                      />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n            );\n          })}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = getParent(person.motherName);\n          const father = getParent(person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn(\n                { 'has-background-warning': person.slug === selectedSlug },\n              )}\n            >\n              <td>\n                <a href={`#/people/${person.slug}`}>\n                  {person.name}\n                </a>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : person.motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from '../types';\n\nenum SortBy {\n  Died = 'died',\n  Born = 'born',\n  Sex = 'sex',\n  Name = 'name',\n}\n\ninterface Sort {\n  sortBy: string | null,\n  order: string | null,\n}\n\nexport function sortPeople(people: Person[], sort: Sort) {\n  const peopleCopy = [...people];\n\n  const direction = sort.order ? -1 : 1;\n\n  if (sort.sortBy) {\n    switch (sort.sortBy) {\n      case SortBy.Died:\n        return peopleCopy.sort((person1, person2) => (\n          (person1.died - person2.died) * direction\n        ));\n      case SortBy.Born:\n        return peopleCopy.sort((person1, person2) => (\n          (person1.born - person2.born) * direction\n        ));\n      case SortBy.Sex:\n        return peopleCopy.sort((person1, person2) => (\n          (person1.sex.localeCompare(person2.sex)) * direction\n        ));\n      case SortBy.Name:\n        return peopleCopy.sort((person1, person2) => (\n          (person1.name.localeCompare(person2.name)) * direction\n        ));\n      default:\n        return peopleCopy;\n    }\n  }\n\n  return peopleCopy;\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { filterPeople } from '../utils/filterPeople';\nimport { sortPeople } from '../utils/sortPeople';\n\nconst PAGE_TITLE = 'People Page';\nconst NO_PEOPLE_MESSAGE = 'There are no people on the server';\nconst SOMETHING_WENT_WRONG_MESSAGE = 'Something went wrong';\n\nconst PARAM_KEYS = {\n  CENTURY: 'century',\n  SEX: 'sex',\n  QUERY: 'query',\n  SORT: 'sort',\n  ORDER: 'order',\n};\n\ninterface Filters {\n  centuries: string[] | null;\n  sex: string | null;\n  query: string | null;\n}\n\ninterface Sort {\n  sortBy: string | null;\n  order: string | null;\n}\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [error, setError] = useState(false);\n  const [filters, setFilters] = useState<Filters>({\n    centuries: null,\n    sex: null,\n    query: null,\n  });\n  const [sorts, setSorts] = useState<Sort>({\n    sortBy: null,\n    order: null,\n  });\n\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const initialLoad = async () => {\n      try {\n        const humans = await getPeople();\n\n        setPeople(humans.map(human => ({\n          ...human,\n          mother: humans.find(person => person.name === human.motherName),\n          father: humans.find(person => person.name === human.fatherName),\n        })));\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initialLoad();\n  }, []);\n\n  useEffect(() => {\n    setFilters({\n      centuries: searchParams.getAll(PARAM_KEYS.CENTURY),\n      sex: searchParams.get(PARAM_KEYS.SEX),\n      query: searchParams.get(PARAM_KEYS.QUERY),\n    });\n\n    setSorts({\n      sortBy: searchParams.get(PARAM_KEYS.SORT),\n      order: searchParams.get(PARAM_KEYS.ORDER),\n    });\n  }, [searchParams]);\n\n  const filteredPeople = sortPeople(filterPeople(people, filters), sorts);\n\n  return (\n    <>\n      <h1 className=\"title\">{PAGE_TITLE}</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {isLoading ? null : (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading ? <Loader /> : (\n                <>\n                  {error && (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      {SOMETHING_WENT_WRONG_MESSAGE}\n                    </p>\n                  )}\n\n                  {!people.length ? (\n                    <p data-cy=\"noPeopleMessage\">{NO_PEOPLE_MESSAGE}</p>\n                  ) : (\n                    <PeopleTable people={filteredPeople} />\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\ninterface Filters {\n  centuries: string[] | null;\n  sex: string | null;\n  query: string | null;\n}\n\nexport function filterPeople(people: Person[], filters: Filters) {\n  let peopleCopy = [...people];\n\n  const normalizeQuery = () => filters.query?.toLowerCase().trim() as string;\n\n  const filterByCenturies = (person: Person) => (\n    filters.centuries?.includes(Math.ceil(person.born / 100).toString())\n  );\n\n  const filterBySex = (person: Person) => (\n    person.sex === filters.sex\n  );\n\n  const filterByQuery = (person: Person) => (\n    person.name.toLowerCase().includes(normalizeQuery())\n    || (person.fatherName?.toLowerCase().includes(normalizeQuery())\n    || person.motherName?.toLowerCase().includes(normalizeQuery()))\n  );\n\n  if (filters.centuries?.length !== 0) {\n    peopleCopy = peopleCopy.filter(filterByCenturies);\n  }\n\n  if (filters.sex) {\n    peopleCopy = peopleCopy.filter(filterBySex);\n  }\n\n  if (filters.query) {\n    peopleCopy = peopleCopy.filter(filterByQuery);\n  }\n\n  return peopleCopy;\n}\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":selectedSlug?\" />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}